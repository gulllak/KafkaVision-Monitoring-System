version: '3.9'

volumes:
  db-metrics:

networks:
  kafka-net:
    driver: bridge

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      - ZOOKEEPER_CLIENT_PORT=2181
      - ZOOKEEPER_TICK_TIME=2000
    networks:
      - kafka-net

  kafka:
    image: confluentinc/cp-kafka:latest
    container_name: kafka
    ports:
      - "29092:29092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - kafka-net

  postgres:
    image: postgres:latest
    container_name: MetricsDB
    environment:
      - POSTGRES_DB=metricsdb
      - POSTGRES_USER=evgenii
      - POSTGRES_PASSWORD=12345678
    ports:
      - "5432:5432"
    volumes:
      - db-metrics:/var/lib/postgresql/data
    networks:
      - kafka-net


  producer:
    build: MetricsProducer
    container_name: MetricsProducer
    ports:
      - "8080:8080"
    environment:
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - kafka-net

  consumer:
    build: MetricsConsumer
    container_name: MetricsConsumer
    ports:
      - "9090:9090"
    depends_on:
      - postgres
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/metricsdb
      - SPRING_DATASOURCE_USERNAME=evgenii
      - SPRING_DATASOURCE_PASSWORD=12345678
    networks:
      - kafka-net
